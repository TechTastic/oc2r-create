name: Deploy Jekyll site to Pages

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["publish"]
    types:
      -completed

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
      - name: Copy documentation to gh-pages
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'

          git fetch origin
          git checkout origin/1.20.1/create6 -- src/main/resources/assets/oc2rcreate/doc/en_us/
          
          rsync -a src/main/resources/assets/oc2rcreate/doc/en_us/ ./. --remove-source-files
          cp -f ./create.md ./index.md
          rm ./create.md
      - name: Convert big Lua code blocks
        run: |
          find . -name "*.md" -type f | while read -r file; do
            temp_file="${file}.tmp"
            
            awk '
            /^\*.*\*$/ { 
                lines[NR] = $0
                star_lines[NR] = 1
            }
            !/^\*.*\*$/ { 
                lines[NR] = $0
                star_lines[NR] = 0
            }
            
            END {
                in_block = 0
                for (i = 1; i <= NR; i++) {
                    if (star_lines[i] && (star_lines[i-1] || star_lines[i+1])) {
                        if (!in_block) {
                            print "```lua"
                            in_block = 1
                        }
                        line = lines[i]
                        gsub(/^\*/, "", line)
                        gsub(/\*$/, "", line)
                        print line
                    } else {
                        if (in_block) {
                            print "```"
                            in_block = 0
                        }
                        print lines[i]
                    }
                }
                if (in_block) {
                    print "```"
                }
            }
            ' "$file" > "$temp_file"
            
            mv "$temp_file" "$file"
          done
      - name: Convert inline code blocks
        run: |
          find . -name "*.md" -type f | while read -r file; do
            echo "Processing inline code in $file..."
            # Convert *text* to `text`
            sed -i 's/\*\([^*]*\)\*/`\1`/g' "$file"
            echo "Completed inline conversion for $file"
          done
      - name: Fix method signature formatting
        run: |
          find . -name "*.md" -type f | while read -r file; do
            echo "Fixing method signatures in $file..."
            awk '
            {
                # Skip bullet lists and device name lines
                if ($0 ~ /^[[:space:]]*[-*+][[:space:]]/ || $0 ~ /Device name:/) {
                    print $0
                } 
                # Look for method signatures: `text` followed by space and capital letter
                else if ($0 ~ /`[^`]+`[[:space:]]+[A-Z]/) {
                    # Split the line at the boundary
                    if (match($0, /(`[^`]+`)[[:space:]]+(.*)/, arr)) {
                        print arr[1]  # method signature
                        print ""      # blank line
                        print arr[2]  # description
                    } else {
                        print $0
                    }
                }
                else {
                    print $0
                }
            }
            ' "$file" > "${file}.tmp" && mv "${file}.tmp" "$file"
            echo "Completed method signature fix for $file"
          done
      - name: Adding Jekyll Configuration
        run: |
          find . -name "*.md" -exec bash -c '
            file="$1"
          
            title=$(grep -m 1 "^#[^#]" "$file")
            title="${title:2}"
          
            permalink="/${file#./}"
            permalink="${permalink%.md}"
            
            {
              echo "---"
              echo "layout: default"
              echo "permalink: $permalink"
              echo "title: \"$title\""
              echo "---"
              echo ""
              cat "$file"
            } > "$file.tmp"
            mv "$file.tmp" "$file"
          ' _ {} \;
          find . -name "*.md" -exec sed -i 's/(\([^)]*\)\.md)/(\1)/g' {} \;
      - name: Setup Ruby
        # https://github.com/ruby/setup-ruby/releases/tag/v1.207.0
        uses: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
